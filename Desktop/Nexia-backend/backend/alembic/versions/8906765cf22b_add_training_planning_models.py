"""Add training planning models

Revision ID: 8906765cf22b
Revises: 662e96ccb6ec
Create Date: 2025-08-07 13:56:32.889704

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "8906765cf22b"
down_revision: Union[str, Sequence[str], None] = "662e96ccb6ec"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "progress_tracking",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("client_id", sa.Integer(), nullable=False),
        sa.Column("exercise_id", sa.Integer(), nullable=False),
        sa.Column("tracking_date", sa.Date(), nullable=False),
        sa.Column("max_weight", sa.Float(), nullable=True),
        sa.Column("max_reps", sa.Integer(), nullable=True),
        sa.Column("max_duration", sa.Integer(), nullable=True),
        sa.Column("max_distance", sa.Float(), nullable=True),
        sa.Column("estimated_1rm", sa.Float(), nullable=True),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["client_id"],
            ["client_profiles.id"],
        ),
        sa.ForeignKeyConstraint(
            ["exercise_id"],
            ["exercises.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_progress_tracking_id"), "progress_tracking", ["id"], unique=False
    )
    op.create_table(
        "training_plans",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("trainer_id", sa.Integer(), nullable=False),
        sa.Column("client_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("start_date", sa.Date(), nullable=False),
        sa.Column("end_date", sa.Date(), nullable=False),
        sa.Column("goal", sa.String(length=255), nullable=False),
        sa.Column("status", sa.String(length=50), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["client_id"],
            ["client_profiles.id"],
        ),
        sa.ForeignKeyConstraint(
            ["trainer_id"],
            ["trainers.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_training_plans_id"), "training_plans", ["id"], unique=False
    )
    op.create_table(
        "macrocycles",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("training_plan_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("start_date", sa.Date(), nullable=False),
        sa.Column("end_date", sa.Date(), nullable=False),
        sa.Column("focus", sa.String(length=255), nullable=False),
        sa.Column("volume_intensity_ratio", sa.String(length=50), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["training_plan_id"],
            ["training_plans.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_macrocycles_id"), "macrocycles", ["id"], unique=False)
    op.create_table(
        "mesocycles",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("macrocycle_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("start_date", sa.Date(), nullable=False),
        sa.Column("end_date", sa.Date(), nullable=False),
        sa.Column("duration_weeks", sa.Integer(), nullable=False),
        sa.Column("primary_focus", sa.String(length=255), nullable=False),
        sa.Column("secondary_focus", sa.String(length=255), nullable=True),
        sa.Column("target_volume", sa.String(length=50), nullable=True),
        sa.Column("target_intensity", sa.String(length=50), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["macrocycle_id"],
            ["macrocycles.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_mesocycles_id"), "mesocycles", ["id"], unique=False)
    op.create_table(
        "microcycles",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("mesocycle_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("start_date", sa.Date(), nullable=False),
        sa.Column("end_date", sa.Date(), nullable=False),
        sa.Column("duration_days", sa.Integer(), nullable=False),
        sa.Column("training_frequency", sa.Integer(), nullable=False),
        sa.Column("deload_week", sa.Boolean(), nullable=True),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["mesocycle_id"],
            ["mesocycles.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_microcycles_id"), "microcycles", ["id"], unique=False)
    op.create_table(
        "training_sessions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("microcycle_id", sa.Integer(), nullable=False),
        sa.Column("client_id", sa.Integer(), nullable=False),
        sa.Column("trainer_id", sa.Integer(), nullable=False),
        sa.Column("session_date", sa.Date(), nullable=False),
        sa.Column("session_name", sa.String(length=255), nullable=False),
        sa.Column("session_type", sa.String(length=100), nullable=False),
        sa.Column("planned_duration", sa.Integer(), nullable=True),
        sa.Column("actual_duration", sa.Integer(), nullable=True),
        sa.Column("status", sa.String(length=50), nullable=True),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["client_id"],
            ["client_profiles.id"],
        ),
        sa.ForeignKeyConstraint(
            ["microcycle_id"],
            ["microcycles.id"],
        ),
        sa.ForeignKeyConstraint(
            ["trainer_id"],
            ["trainers.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_training_sessions_id"), "training_sessions", ["id"], unique=False
    )
    op.create_table(
        "client_feedback",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("training_session_id", sa.Integer(), nullable=False),
        sa.Column("client_id", sa.Integer(), nullable=False),
        sa.Column("perceived_effort", sa.Integer(), nullable=True),
        sa.Column("fatigue_level", sa.Integer(), nullable=True),
        sa.Column("sleep_quality", sa.Integer(), nullable=True),
        sa.Column("stress_level", sa.Integer(), nullable=True),
        sa.Column("motivation_level", sa.Integer(), nullable=True),
        sa.Column("energy_level", sa.Integer(), nullable=True),
        sa.Column("muscle_soreness", sa.String(length=255), nullable=True),
        sa.Column("pain_or_discomfort", sa.Text(), nullable=True),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("feedback_date", sa.DateTime(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["client_id"],
            ["client_profiles.id"],
        ),
        sa.ForeignKeyConstraint(
            ["training_session_id"],
            ["training_sessions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_client_feedback_id"), "client_feedback", ["id"], unique=False
    )
    op.create_table(
        "session_exercises",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("training_session_id", sa.Integer(), nullable=False),
        sa.Column("exercise_id", sa.Integer(), nullable=False),
        sa.Column("order_in_session", sa.Integer(), nullable=False),
        sa.Column("planned_sets", sa.Integer(), nullable=True),
        sa.Column("planned_reps", sa.Integer(), nullable=True),
        sa.Column("planned_weight", sa.Float(), nullable=True),
        sa.Column("planned_duration", sa.Integer(), nullable=True),
        sa.Column("planned_distance", sa.Float(), nullable=True),
        sa.Column("planned_rest", sa.Integer(), nullable=True),
        sa.Column("actual_sets", sa.Integer(), nullable=True),
        sa.Column("actual_reps", sa.Integer(), nullable=True),
        sa.Column("actual_weight", sa.Float(), nullable=True),
        sa.Column("actual_duration", sa.Integer(), nullable=True),
        sa.Column("actual_distance", sa.Float(), nullable=True),
        sa.Column("actual_rest", sa.Integer(), nullable=True),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["exercise_id"],
            ["exercises.id"],
        ),
        sa.ForeignKeyConstraint(
            ["training_session_id"],
            ["training_sessions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_session_exercises_id"), "session_exercises", ["id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_session_exercises_id"), table_name="session_exercises")
    op.drop_table("session_exercises")
    op.drop_index(op.f("ix_client_feedback_id"), table_name="client_feedback")
    op.drop_table("client_feedback")
    op.drop_index(op.f("ix_training_sessions_id"), table_name="training_sessions")
    op.drop_table("training_sessions")
    op.drop_index(op.f("ix_microcycles_id"), table_name="microcycles")
    op.drop_table("microcycles")
    op.drop_index(op.f("ix_mesocycles_id"), table_name="mesocycles")
    op.drop_table("mesocycles")
    op.drop_index(op.f("ix_macrocycles_id"), table_name="macrocycles")
    op.drop_table("macrocycles")
    op.drop_index(op.f("ix_training_plans_id"), table_name="training_plans")
    op.drop_table("training_plans")
    op.drop_index(op.f("ix_progress_tracking_id"), table_name="progress_tracking")
    op.drop_table("progress_tracking")
    # ### end Alembic commands ###
