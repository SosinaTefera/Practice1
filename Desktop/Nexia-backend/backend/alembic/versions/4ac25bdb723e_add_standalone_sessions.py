"""add_standalone_sessions

Revision ID: 4ac25bdb723e
Revises: 8906765cf22b
Create Date: 2025-08-08 09:18:40.346243

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "4ac25bdb723e"
down_revision: Union[str, Sequence[str], None] = "8906765cf22b"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "standalone_sessions",
        sa.Column("trainer_id", sa.Integer(), nullable=False),
        sa.Column("client_id", sa.Integer(), nullable=False),
        sa.Column("session_date", sa.Date(), nullable=False),
        sa.Column("session_name", sa.String(length=255), nullable=False),
        sa.Column("session_type", sa.String(length=100), nullable=False),
        sa.Column("planned_duration", sa.Integer(), nullable=True),
        sa.Column("actual_duration", sa.Integer(), nullable=True),
        sa.Column("status", sa.String(length=50), nullable=True),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["client_id"],
            ["client_profiles.id"],
        ),
        sa.ForeignKeyConstraint(
            ["trainer_id"],
            ["trainers.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_standalone_sessions_id"), "standalone_sessions", ["id"], unique=False
    )
    op.create_table(
        "standalone_session_exercises",
        sa.Column("standalone_session_id", sa.Integer(), nullable=False),
        sa.Column("exercise_id", sa.Integer(), nullable=False),
        sa.Column("order_in_session", sa.Integer(), nullable=False),
        sa.Column("planned_sets", sa.Integer(), nullable=True),
        sa.Column("planned_reps", sa.Integer(), nullable=True),
        sa.Column("planned_weight", sa.Float(), nullable=True),
        sa.Column("planned_duration", sa.Integer(), nullable=True),
        sa.Column("planned_distance", sa.Float(), nullable=True),
        sa.Column("planned_rest", sa.Integer(), nullable=True),
        sa.Column("actual_sets", sa.Integer(), nullable=True),
        sa.Column("actual_reps", sa.Integer(), nullable=True),
        sa.Column("actual_weight", sa.Float(), nullable=True),
        sa.Column("actual_duration", sa.Integer(), nullable=True),
        sa.Column("actual_distance", sa.Float(), nullable=True),
        sa.Column("actual_rest", sa.Integer(), nullable=True),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["exercise_id"],
            ["exercises.id"],
        ),
        sa.ForeignKeyConstraint(
            ["standalone_session_id"],
            ["standalone_sessions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_standalone_session_exercises_id"),
        "standalone_session_exercises",
        ["id"],
        unique=False,
    )
    op.create_table(
        "standalone_session_feedback",
        sa.Column("standalone_session_id", sa.Integer(), nullable=False),
        sa.Column("client_id", sa.Integer(), nullable=False),
        sa.Column("perceived_effort", sa.Integer(), nullable=True),
        sa.Column("fatigue_level", sa.Integer(), nullable=True),
        sa.Column("sleep_quality", sa.Integer(), nullable=True),
        sa.Column("stress_level", sa.Integer(), nullable=True),
        sa.Column("motivation_level", sa.Integer(), nullable=True),
        sa.Column("energy_level", sa.Integer(), nullable=True),
        sa.Column("muscle_soreness", sa.String(length=255), nullable=True),
        sa.Column("pain_or_discomfort", sa.Text(), nullable=True),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("feedback_date", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["client_id"],
            ["client_profiles.id"],
        ),
        sa.ForeignKeyConstraint(
            ["standalone_session_id"],
            ["standalone_sessions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_standalone_session_feedback_id"),
        "standalone_session_feedback",
        ["id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_standalone_session_feedback_id"),
        table_name="standalone_session_feedback",
    )
    op.drop_table("standalone_session_feedback")
    op.drop_index(
        op.f("ix_standalone_session_exercises_id"),
        table_name="standalone_session_exercises",
    )
    op.drop_table("standalone_session_exercises")
    op.drop_index(op.f("ix_standalone_sessions_id"), table_name="standalone_sessions")
    op.drop_table("standalone_sessions")
    # ### end Alembic commands ###
